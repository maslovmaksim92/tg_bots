import os
import random
from datetime import datetime
from openai import AsyncOpenAI
from promts.data import (
    FAQ_AGENT, FAQ_INVESTOR, FILE_HINTS,
    CTA_AGENT, CTA_INVESTOR,
    FOLLOWUP_AGENT, FOLLOWUP_INVESTOR,
    STYLE_PROMPT_AGENT, STYLE_PROMPT_INVESTOR
)

client = AsyncOpenAI(api_key=os.getenv("OPENAI_API_KEY"))

AGENT_CUES = ["—è –∞–≥–µ–Ω—Ç", "—É –º–µ–Ω—è –∫–ª–∏–µ–Ω—Ç", "—Ä–∞–±–æ—Ç–∞—é —Å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º", "–±—Ä–æ–∫–µ—Ä"]
INVESTOR_CUES = ["–∏—â—É –¥–ª—è —Å–µ–±—è", "—Ö–æ—á—É –≤–ª–æ–∂–∏—Ç—å", "—Å–º–æ—Ç—Ä—é –¥–ª—è –ø–æ–∫—É–ø–∫–∏", "–∏–Ω–≤–µ—Å—Ç–æ—Ä", "–¥–æ—Ö–æ–¥"]

SUMMARY = (
    "üìç *–ö–∞–ª—É–≥–∞, –ø–µ—Ä. –°–µ–ª—å—Å–∫–∏–π, 8–∞*\n"
    "üè¢ –û–±—ä–µ–∫—Ç: –±—ã–≤—à–∞—è –≥–æ—Å—Ç–∏–Ω–∏—Ü–∞, –ø–µ—Ä–µ–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–Ω–∞—è –ø–æ–¥ –£–§–ò–¶ (—É—á–∞—Å—Ç–æ–∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—â–∏–π –∫–∞–∫ –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä)\n"
    "üìê –ü–ª–æ—â–∞–¥—å: 1089,7 –º¬≤ + 815 –º¬≤ –∑–µ–º–ª–∏\n"
    "üìÑ –ê—Ä–µ–Ω–¥–∞—Ç–æ—Ä: –û–û–û ¬´–í–∞—à –î–æ–º¬ª. –ü–æ–º–µ—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –§–°–ò–ù –≤ –±–µ–∑–≤–æ–∑–º–µ–∑–¥–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ\n"
    "üèõ –§–°–ò–ù –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∂–µ–Ω—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—É—é —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏—é\n"
    "üíº –£–§–ò–¶ –¥–∞—ë—Ç –û–û–û ¬´–í–∞—à –î–æ–º¬ª —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ —Ç—Ä—É–¥–æ–≤—ã–º —Ä–µ—Å—É—Ä—Å–∞–º –∏ –∑–∞–≥—Ä—É–∑–∫—É –∑–¥–∞–Ω–∏—è\n"
    "üìà –ê—Ä–µ–Ω–¥–∞: 700 —Ç—ã—Å ‚ÇΩ/–º–µ—Å, Triple Net (NNN), –¥–æ–≥–æ–≤–æ—Ä –Ω–∞ 10 –ª–µ—Ç —Å –µ–∂–µ–≥–æ–¥–Ω–æ–π –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–µ–π\n"
    "üîê –û–±—Ä–µ–º–µ–Ω–µ–Ω–∏–µ (–∏–ø–æ—Ç–µ–∫–∞) –±—É–¥–µ—Ç —Å–Ω—è—Ç–æ –¥–æ –≤—ã—Ö–æ–¥–∞ –Ω–∞ —Å–¥–µ–ª–∫—É\n"
    "üìä –î–æ–∫—É–º–µ–Ω—Ç—ã: –ï–ì–†–ù, —Ç–µ—Ö–ø–ª–∞–Ω, –æ—Ü–µ–Ω–∫–∞, –°–ü 308 ‚Äî –≥–æ—Ç–æ–≤—ã –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ\n"
    "üí∞ –¶–µ–Ω–∞: 56 –º–ª–Ω ‚ÇΩ (–æ–±—Å—É–∂–¥–∞–µ—Ç—Å—è)"
)

CONTACT_INFO = "\n\nüìß vasdom40@yandex.ru\nüìû +7 (920) 092-45-50"

def detect_persona(text: str) -> str:
    text = text.lower()
    if any(cue in text for cue in AGENT_CUES):
        return "agent"
    if any(cue in text for cue in INVESTOR_CUES):
        return "investor"
    return "neutral"

async def get_answer(question: str, user_id: int = None) -> str:
    q_lower = question.lower()

    # –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç
    for kw, answer in {**FAQ_AGENT, **FAQ_INVESTOR}.items():
        if kw in q_lower:
            return answer + CONTACT_INFO

    persona = detect_persona(q_lower)

    if persona == "agent":
        style = STYLE_PROMPT_AGENT
        cta = random.choice(CTA_AGENT)
        followup = random.choice(FOLLOWUP_AGENT)
    elif persona == "investor":
        style = STYLE_PROMPT_INVESTOR
        cta = random.choice(CTA_INVESTOR)
        followup = random.choice(FOLLOWUP_INVESTOR)
    else:
        style = STYLE_PROMPT_AGENT + "\n\n" + STYLE_PROMPT_INVESTOR
        cta = random.choice(CTA_AGENT + CTA_INVESTOR)
        followup = random.choice(FOLLOWUP_AGENT + FOLLOWUP_INVESTOR)

    file_hint = ""
    for key, msg in FILE_HINTS.items():
        if key in q_lower:
            file_hint = f"\nüìé {msg}"
            break

    prompt = (
        f"{SUMMARY}\n\n{style}\n\n"
        f"–í–æ–ø—Ä–æ—Å –∫–ª–∏–µ–Ω—Ç–∞: \"{question}\"\n\n"
        f"–û—Ç–≤–µ—Ç:\n"
        f"1. ‚ú≥Ô∏è –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –∞–∫—Ç–∏–≤ —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —ç–∫—Å–ø–ª—É–∞—Ç–∞—Ü–∏–µ–π –æ—Ç –§–°–ò–ù\n"
        f"2. üìÑ {cta}{file_hint}\n"
        f"3. ‚ùì {followup}"
    )

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    if user_id:
        try:
            os.makedirs("logs", exist_ok=True)
            with open("logs/questions.log", "a", encoding="utf-8") as f:
                f.write(f"[{datetime.now()}] {user_id}: {question}\n")
        except Exception:
            pass

    # –ó–∞–ø—Ä–æ—Å –≤ GPT
    try:
        response = await client.chat.completions.create(
            model="gpt-4",
            messages=[{"role": "user", "content": prompt}]
        )
        return response.choices[0].message.content.strip() + CONTACT_INFO
    except Exception as e:
        print(f"[ERROR GPT]: {e}")
        return (
            "üìç –û–±—ä–µ–∫—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç –≤ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ. –î–æ–∫—É–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã. "
            "–£—Ç–æ—á–Ω–∏—Ç–µ, –≤—ã –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–ª–∏ —Ä–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç–µ –ø–æ–∫—É–ø–∫—É?" + CONTACT_INFO
        )
